%% Image Reproduction
orignalImage = imresize(imread('viktor.jpg'),0.25);

dimensionY = size(orignalImage,1); 
dimensionX = size(orignalImage,2);
Lab_Image = rgb2lab(orignalImage);

%Gör om databasen till RGB
ImageDateBase_RGB = lab2rgb(ImageDataBase_LAB);

% TODO: Optimera 2x2 analysen (kör alla x2) samt göra så att det enkelt går att ändra till 3x3 etc
for i = 1:dimensionX
   for j = 1:dimensionY
      if(j ~= dimensionY && i ~= dimensionX)   %Första raden
         pixel(1,:) = Lab_Image(j,i,:);        %[x,~;~,~]
         pixel(2,:) = Lab_Image(j,i+1,:);      %[~,x;~,~]
         pixel(3,:) = Lab_Image(j+1,i,:);      %[~,~;x,~]
         pixel(4,:) = Lab_Image(j+1,i+1,:);    %[~,~;~,x]
         RecreatedImageValues(j,i,:) = meanLabValue(pixel);
      elseif(j == dimensionY || i == dimensionX) % sista rad/kolumn
          RecreatedImageValues(j,i,:) = meanLabValue(Lab_Image(j,i,:));
      else                                       % Sista pixeln
          RecreatedImageValues(j,i,:) = meanLabValue(Lab_Image(j,i,:));  
      end
   end
end

%indexmatrisen för vilken bild i datorbasen som hör till vilket pixelområde
idx = ones(j,i);

for a = 1:size(RecreatedImageValues,1)
    for b = 1:size(RecreatedImageValues,2)
        Value_L = RecreatedImageValues(b,a,1);
        Value_A = RecreatedImageValues(b,a,2);
        Value_B = RecreatedImageValues(b,a,3);
        
        difference = mean2(sqrt((Value_L-L_Data(1)).^2 + (Value_A-A_Data(1)).^2 + (Value_B-B_Data(1)).^2));
        for findImage = 1:size(L_Data,1)
            NewDifference = mean2(sqrt((Value_L-L_Data(findImage)).^2 + (Value_A-A_Data(findImage)).^2 + (Value_B-B_Data(findImage)).^2));
            if(NewDifference < difference)          % Hittar minsta differansen
                difference = NewDifference;         % Ekvivalent? med min(pixel,bild)      
                idx(b,a) = findImage;               % Sparar index för bilden
            end
        end
    end
end

newImageRangeX = 1:31:(size(idx,1)*32);     %Sätter upp storleken på slutbilden
newImageRangeY = 1:31:(size(idx,2)*32);

for u = 1:size(idx,1)
    for v = 1:size(idx,2)    
        newImage(newImageRangeX(u):newImageRangeX(u+1),newImageRangeY(v):newImageRangeY(v+1),:) = ImageDateBase_RGB(:,:,:,idx(u,v));   
    end
end

imshow(newImage)